<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.3.xsd">

    <context:annotation-config />

    <bean name="propertiesURI" class="java.lang.System"
        factory-method="getProperty">
        <constructor-arg index="0" value="config.properties.uri" />
    </bean>
    
    <bean id="serverProperties"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <ref bean="propertiesURI" />
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="false" />
    </bean>
    
    <bean id="fcrepoClientFactory" class="edu.unc.lib.boxc.fcrepo.utils.FcrepoClientFactory" factory-method="factory">
        <constructor-arg value="${fcrepo.baseUrl}" />
        <constructor-arg value="${fcrepo.auth.host}" />
        <constructor-arg value="${fcrepo.auth.user}" />
        <constructor-arg value="${fcrepo.auth.password}" />
    </bean>
    
    <bean id="fcrepoClient" class="org.fcrepo.client.FcrepoClient"
            factory-bean="fcrepoClientFactory" factory-method="makeClient">
    </bean>
    
    <bean id="ldpContainerFactory" class="edu.unc.lib.boxc.model.fcrepo.services.LdpContainerFactory">
        <property name="client" ref="fcrepoClient" />
    </bean>
    
    <bean id="repositoryPIDMinter" class="edu.unc.lib.boxc.model.fcrepo.ids.RepositoryPIDMinter"></bean>

    <bean id="repositoryObjectFactory" class="edu.unc.lib.boxc.model.fcrepo.services.RepositoryObjectFactoryImpl">
        <property name="client" ref="fcrepoClient" />
        <property name="ldpFactory" ref="ldpContainerFactory" />
        <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
        <property name="pidMinter" ref="repositoryPIDMinter" />
        <property name="sparqlUpdateService" ref="sparqlUpdateService" />
    </bean>
    
    <bean id="cacheTimeToLive" class="java.lang.Long">
        <constructor-arg value="500" />
    </bean>
    
    <bean id="cacheMaxSize" class="java.lang.Long">
        <constructor-arg value="100" />
    </bean>
    
    <bean id="repositoryObjectLoader" class="edu.unc.lib.boxc.model.fcrepo.services.RepositoryObjectLoaderImpl" init-method="init">
        <property name="repositoryObjectCacheLoader" ref="repositoryObjectCacheLoader" />
        <property name="cacheTimeToLive" ref="cacheTimeToLive" />
        <property name="cacheMaxSize" ref="cacheMaxSize" />
    </bean>
    
    <bean id="repositoryObjectDriver" class="edu.unc.lib.boxc.model.fcrepo.services.RepositoryObjectDriver">
        <property name="client" ref="fcrepoClient" />
        <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
        <property name="pidMinter" ref="repositoryPIDMinter" />
        <property name="sparqlQueryService" ref="sparqlQueryService" />
    </bean>
    
    <bean id="storageLocationManager" class="edu.unc.lib.boxc.persist.impl.storage.StorageLocationManagerImpl"
            init-method="init">
        <property name="repositoryObjectLoader" ref="repositoryObjectLoader" />
        <property name="pathFactory" ref="contentPathFactory" />
        <property name="configPath" value="${storageLocations.path}" />
        <property name="mappingPath" value="${storageLocationMappings.path}" />
    </bean>
    
    <bean id="binaryTransferService" class="edu.unc.lib.boxc.persist.impl.transfer.BinaryTransferServiceImpl">
        <property name="ingestSourceManager" ref="ingestSourceManager" />
        <property name="storageLocationManager" ref="storageLocationManager" />
    </bean>
    
    <bean id="premisLoggerFactory" class="edu.unc.lib.boxc.operations.impl.events.PremisLoggerFactoryImpl">
        <property name="pidMinter" ref="repositoryPIDMinter" />
        <property name="repoObjLoader" ref="repositoryObjectLoader" />
        <property name="repoObjFactory" ref="repositoryObjectFactory" />
        <property name="binaryTransferService" ref="binaryTransferService" />
    </bean>
    
    <bean id="sparqlUpdateService" class="edu.unc.lib.boxc.fcrepo.utils.FedoraSparqlUpdateService">
        <property name="fcrepoClient" ref="fcrepoClient" />
    </bean>
    
    <bean id="httpClientConnectionManager" class="org.apache.http.impl.conn.PoolingHttpClientConnectionManager"
            destroy-method="shutdown">
    </bean>
    
    <bean id="sparqlQueryService" class="edu.unc.lib.boxc.model.fcrepo.sparql.FusekiSparqlQueryServiceImpl">
        <property name="fusekiQueryURL" value="${fuseki.baseUri}" />
    </bean>
    
    <bean id="repositoryObjectCacheLoader" class="edu.unc.lib.boxc.model.fcrepo.objects.RepositoryObjectCacheLoader">
        <property name="client" ref="fcrepoClient" />
        <property name="repositoryObjectDriver" ref="repositoryObjectDriver" />
        <property name="repositoryObjectFactory" ref="repositoryObjectFactory" />
    </bean>
    
    <bean id="contentPathFactory" class="edu.unc.lib.boxc.model.fcrepo.services.ContentPathFactoryImpl"
            init-method="init">
        <property name="cacheMaxSize" value="100" />
        <property name="cacheTimeToLive" value="100" />
        <property name="fcrepoClient" ref="fcrepoClient" />
    </bean>
    
    <bean id="txManager" class="edu.unc.lib.boxc.fcrepo.utils.TransactionManager">
        <property name="client" ref="fcrepoClient" />
        <property name="binaryTransferService" ref="binaryTransferService" />
    </bean>
    
    <bean id="ingestSourceManager" class="edu.unc.lib.boxc.persist.impl.sources.IngestSourceManagerImpl"
            init-method="init">
        <property name="contentPathFactory" ref="contentPathFactory" />
        <property name="configPath" value="${ingestSources.path}" />
        <property name="mappingPath" value="${ingestSourceMappings.path}" />
    </bean>

    <bean id="injectedCdrVersion" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="edu.unc.lib.boxc.model.api.SoftwareAgentConstants.setCdrVersion" />
        <property name="arguments">
            <list>
                <value>5.0</value>
            </list>
        </property>
    </bean>
</beans>
